apiVersion: v1
kind: Namespace
metadata:
  name: zmist

---

apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: zmist
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogImRteGhaSGx6YkdGMmNtOXRZVzVsYm10dk9rUjBjMTloY2pkemRIbHNaVGM9IgoJCX0KCX0sCgkiSHR0cEhlYWRlcnMiOiB7CgkJIlVzZXItQWdlbnQiOiAiRG9ja2VyLUNsaWVudC8xOS4wMy44IChkYXJ3aW4pIgoJfSwKCSJleHBlcmltZW50YWwiOiAiZGlzYWJsZWQiLAoJInN0YWNrT3JjaGVzdHJhdG9yIjogInN3YXJtIgp9Cg==
type: kubernetes.io/dockerconfigjson

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: zmist-website
    app.kubernetes.io/instance: zmist
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: zmist
    app.kubernetes.io/managed-by: docker
    environment: staging
    tier: frontend
    partition: zmist
  name: zmist-website
  namespace: zmist
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: zmist-website
  template:
    metadata:
      labels:
        app.kubernetes.io/name: zmist-website
    spec:
      containers:
        - image: {{image}}
          imagePullPolicy: "Always"
          name: zmist-website
          ports:
            - containerPort: 3000
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: zmist-website
    app.kubernetes.io/instance: zmist
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: zmist
    app.kubernetes.io/managed-by: docker
    environment: staging
    tier: frontend
    partition: zmist-website
  name: zmist-website
  namespace: zmist
spec:
  type: ClusterIP
  ports:
    - name: "80"
      port: 80
      targetPort: 3000
  selector:
    app.kubernetes.io/name: zmist-website
status:
  loadBalancer: {}

---

apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-zmist-prod
  namespace: cert-manager
  labels:
    environment: production
    tier: certificate
    app.kubernetes.io/part-of: zmist
    partition: zmist
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: vlad@outright.digital
    privateKeySecretRef:
      name: letsencrypt-zmist-prod
    solvers:
      - http01:
          ingress:
            class: nginx

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: zmist-ingress
  namespace: zmist
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-zmist-prod
  labels:
    environment: staging
    tier: ingress
    partition: zmist
spec:
  tls:
    - hosts:
        - zmist.outright.xyz
      secretName: zmist-tls
  rules:
    - host: zmist.outright.xyz
      http:
        paths:
          - backend:
              serviceName: zmist-website
              servicePort: 80
